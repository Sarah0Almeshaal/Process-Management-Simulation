package src.cpu_scheduling_project;

import javax.swing.JOptionPane;
import javax.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class CPIT260_Group8_Project extends javax.swing.JFrame {

    //*********************************************
    static Scanner sc;
    static int n;
    static float Twt, w;
    static float[] A = new float[20];
    static float[] Wt = new float[20];
    
    static int[][] BB = new int[6][3];
    //
    static float[] response_time = new float[20]; 
    static float[] turnaround_time = new float[20];
    static float[] termination_time = new float[20];
    //*********************************************
    public static void Getdata() throws FileNotFoundException {
        File file1 = new File("process.txt");
        
        if (!file1.exists()) {
            //if it is not exist print erroe message
            System.out.println("file does not exist");
            System.exit(0);
        }
        int i;
        Scanner sc = new Scanner(file1);
        n = sc.nextInt();

        for (i = 1; i <= n; i++) {
            A[i] = sc.nextFloat();
            BB[i][0] = sc.nextInt();
            BB[i][1] = i;  
            BB[i][2] = sc.nextInt();

        }
    }

    /**
     * Creates new form my_GUI
     */
    public CPIT260_Group8_Project() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        FCFS_Button = new javax.swing.JButton();
        SJF_Button = new javax.swing.JButton();
        Priority_Button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        FCFS_Output = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        SJF_Output = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Priority_Output = new javax.swing.JTextArea();
        Exit_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        FCFS_Button.setBackground(new java.awt.Color(255, 255, 255));
        FCFS_Button.setText("FCFS");
        FCFS_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FCFS_ButtonActionPerformed(evt);
            }
        });

        SJF_Button.setBackground(new java.awt.Color(255, 255, 255));
        SJF_Button.setText("SJF");
        SJF_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SJF_ButtonActionPerformed(evt);
            }
        });

        Priority_Button.setBackground(new java.awt.Color(255, 255, 255));
        Priority_Button.setText("Priority");
        Priority_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Priority_ButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 1, 24)); // NOI18N
        jLabel1.setText("CPU Scheduling");

        FCFS_Output.setColumns(20);
        FCFS_Output.setRows(5);
        jScrollPane2.setViewportView(FCFS_Output);

        SJF_Output.setColumns(20);
        SJF_Output.setRows(5);
        jScrollPane1.setViewportView(SJF_Output);

        Priority_Output.setColumns(20);
        Priority_Output.setRows(5);
        jScrollPane3.setViewportView(Priority_Output);

        Exit_Button.setBackground(new java.awt.Color(255, 255, 255));
        Exit_Button.setText("Exit");
        Exit_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SJF_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Priority_Button, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(FCFS_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(Exit_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(FCFS_Button)
                        .addGap(137, 137, 137)
                        .addComponent(SJF_Button)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(Priority_Button)))
                .addGap(18, 18, 18)
                .addComponent(Exit_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Priority_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Priority_ButtonActionPerformed
        // TODO add your handling code here:

        int i, j, k = 1;
        int[] B = new int[20];
        int [] P= new int[20];
        float w = (float) 0.0;
        int max;
        Twt = (float) 0.0;
        max = 1;
        for (i = 1; i <= n; i++) {
               B[i] = BB[i][0];
            if (max < BB[i][2]) {
                max = BB[i][2];
            }
        }
        j = 1;
        while (j <= max) {
            i = 1;
            while (i <= n) {
                if (BB[i][2] == j) {
                    Wt[i] = w;
                    w = w + B[i];
                    P[k++] = BB[i][1];
                }
                i++;
            }
            j++;
        }
        for (i = 1; i <= n; i++) {
            Twt = Twt + Wt[i];
            turnaround_time[i] = B[i] + Wt[i];
            response_time [i] = turnaround_time[i] - B[i];
            termination_time [i] = Wt[i] + (turnaround_time[i] - Wt[i]);

        }

        Priority_Output.append("process   waiting time   turnaround time     response time      termination time\n");
        for (i = 1; i <= n; i++) {
            Priority_Output.append("    "+P[i] + "             ");
            Priority_Output.append(Wt[P[i]] + "\t                 " + turnaround_time[P[i]] + "\t\t"+response_time [P[i]]+ "\t"+termination_time[P[i]]+ "\n");
        }

    }//GEN-LAST:event_Priority_ButtonActionPerformed

    private void SJF_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SJF_ButtonActionPerformed
   
        {
            int i, j, temp, temp2;
            int[][] B = new int[6][2];
            
            
            Twt = (float) 0.0;
            for (i = 1; i <= n; i++) {
                B[i][0] = BB[i][0];
                B[i][1] = BB[i][1];
           }
            
            for (i = n;  i>= 1; i++) {
                for (j = 1; j <= n; j++){
                    if (B[j][0] < B[j - 1][0]) {
                        temp = B[j - 1][0];
                         B[j - 1][0] = B[j][0];
                         B[j][0] = temp;
                         
                         temp2 = B[j - 1][1];
                         B[j-1][1] = B[j][1];
                         B[j][1] = temp2;
                    }
                }
            }

            Wt[1] = 0;
            for (i = 2; i <= n; i++) {
                Wt[i] = B[i - 1][0] + Wt[i - 1];
                
            }
      
            for (i = 1; i <= n; i++) {
                turnaround_time[i] = B[i][0] + Wt[i];
                response_time [i] = turnaround_time[i] - B[i][0];
                termination_time [i] = Wt[i] + (turnaround_time[i] - Wt[i]);
           }

            SJF_Output.append("process   waiting time   turnaround time     response time       termination time\n");
            for (i = 1; i <= n; i++) {
                SJF_Output.append("    "+B[i][1]+ "               ");
                SJF_Output.append( Wt[i] + "\t                 " + turnaround_time[i] + "\t                     "+response_time [i]+ "                            "+termination_time[i]+ "\n");
            }
        }
    }//GEN-LAST:event_SJF_ButtonActionPerformed

    private void FCFS_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FCFS_ButtonActionPerformed

        int i;
        int[] B = new int[10];
        Twt = (float) 0.0;
        for (i = 1; i <= n; i++) {
            B[i] = BB[i][0];

        }
        Wt[1] = 0;
        for (i = 2; i <= n; i++) {
            Wt[i] = BB[i-1][0] + Wt[i - 1];
            
        }
        //Calculating Average Weighting Time
  	for(i=1;i<=n;i++){
        	Twt=Twt+Wt[i];
                turnaround_time[i] = BB[i][0] + Wt[i];
                response_time [i] = turnaround_time[i] - BB[i][0];
                termination_time [i] = Wt[i] + (turnaround_time[i] - Wt[i]);

        }
        FCFS_Output.append("process   waiting time   turnaround time     response time       termination time\n");
        for (i = 1; i <= n; i++) {
            FCFS_Output.append("    "+BB[i][1] + "                   ");
            FCFS_Output.append(Wt[i] + "\t" + turnaround_time[i] + "                        "+response_time [i]+ "                        "+termination_time[i]+ "\n");
        }
    }//GEN-LAST:event_FCFS_ButtonActionPerformed

    private void Exit_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_ButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_Exit_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CPIT260_Group8_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CPIT260_Group8_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CPIT260_Group8_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CPIT260_Group8_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        // Getdata();
        /* Create and display the form */
        Getdata();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CPIT260_Group8_Project().setVisible(true);

            }
 
          }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit_Button;
    private javax.swing.JButton FCFS_Button;
    private javax.swing.JTextArea FCFS_Output;
    private javax.swing.JButton Priority_Button;
    private javax.swing.JTextArea Priority_Output;
    private javax.swing.JButton SJF_Button;
    private javax.swing.JTextArea SJF_Output;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
